"use strict";(self.webpackChunkeslint_plugin_hub=self.webpackChunkeslint_plugin_hub||[]).push([[3947],{4163:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=i(4848),t=i(8453);const r={title:"Best Coding Practices Enforced by ESLint Plugin Hub",slug:"best-coding-practices",authors:["anand-kumar"],tags:["best-practices","eslint","naming-conventions","code-quality"]},a=void 0,l={permalink:"/eslint-plugin-hub/blog/best-coding-practices",editUrl:"https://github.com/mindfiredigital/eslint-plugin-hub/edit/main/blog/2024-09-29-best-coding-practices.md",source:"@site/blog/2024-09-29-best-coding-practices.md",title:"Best Coding Practices Enforced by ESLint Plugin Hub",description:"Why Coding Standards Matter",date:"2024-09-29T00:00:00.000Z",tags:[{inline:!1,label:"Best Practices",permalink:"/eslint-plugin-hub/blog/tags/best-practices",description:"Coding best practices and guidelines."},{inline:!1,label:"ESLint",permalink:"/eslint-plugin-hub/blog/tags/eslint",description:"ESLint tag description"},{inline:!1,label:"Naming Conventions",permalink:"/eslint-plugin-hub/blog/tags/naming-conventions",description:"Best practices for naming conventions in code."},{inline:!1,label:"Code Quality",permalink:"/eslint-plugin-hub/blog/tags/code-quality",description:"Techniques to improve code quality and maintainability."}],readingTime:1.39,hasTruncateMarker:!0,authors:[{name:"Anand Kumar",title:"Software Engineer @ Mindfire Solutions",url:"https://github.com/anandmindfire",page:{permalink:"/eslint-plugin-hub/blog/authors/anand-kumar"},socials:{github:"https://github.com/anandmindfire"},imageURL:"https://github.com/anandmindfire.png",key:"anand-kumar"}],frontMatter:{title:"Best Coding Practices Enforced by ESLint Plugin Hub",slug:"best-coding-practices",authors:["anand-kumar"],tags:["best-practices","eslint","naming-conventions","code-quality"]},unlisted:!1,prevItem:{title:"Why Choose ESLint Plugin Hub for Your JavaScript Projects?",permalink:"/eslint-plugin-hub/blog/why-eslint-plugin-hub"},nextItem:{title:"How ESLint Plugin Hub Helps You Write Better Code",permalink:"/eslint-plugin-hub/blog/how-eslint-plugin-hub-helps"}},o={authorsImageUrls:[void 0]},c=[{value:"Why Coding Standards Matter",id:"why-coding-standards-matter",level:3},{value:"Key Best Practices Enforced by the Plugin",id:"key-best-practices-enforced-by-the-plugin",level:3}];function d(n){const e={code:"code",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h3,{id:"why-coding-standards-matter",children:"Why Coding Standards Matter"}),"\n",(0,s.jsx)(e.p,{children:"Adopting consistent coding standards is crucial for maintaining a clean, scalable, and easy-to-understand codebase. It\u2019s not just about readability\u2014having structured naming conventions and optimized functions makes collaboration smoother and helps future developers quickly grasp your project."}),"\n",(0,s.jsxs)(e.p,{children:["This is where ",(0,s.jsx)(e.code,{children:"@mindfiredigital/eslint-plugin-hub"})," comes in. It automatically enforces coding best practices, allowing developers to focus on solving problems without worrying about inconsistent code."]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{src:"https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExZ3h6YzY2d3E2d3Rnc3hxbmNzYXEybGRuazg2emR5NTM5MDV4MjE4byZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/26tn33aiTi1jkl6H6/giphy.webp",alt:"Welcome Image"})}),"\n",(0,s.jsx)(e.h3,{id:"key-best-practices-enforced-by-the-plugin",children:"Key Best Practices Enforced by the Plugin"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Consistent Naming Conventions"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"PascalCase for Classes"}),": PascalCase ensures class names stand out and remain distinct from variables or functions.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Example: ",(0,s.jsx)(e.code,{children:"class UserProfile"})," instead of ",(0,s.jsx)(e.code,{children:"class userProfile"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"camelCase for Variables and Functions"}),": A widely accepted standard in JavaScript that improves code consistency by using camelCase for both variables and functions.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Example: ",(0,s.jsx)(e.code,{children:"function getUserData()"})," instead of ",(0,s.jsx)(e.code,{children:"function GetUserData()"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Descriptive Names"}),": Encourages meaningful and self-explanatory names for variables and functions, aiding future code comprehension.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Example: ",(0,s.jsx)(e.code,{children:"calculateTotalPrice()"})," instead of ",(0,s.jsx)(e.code,{children:"calcPrice()"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Folder and File Organization"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"kebab-case for Filenames"}),": Enforcing kebab-case for filenames promotes uniformity and reduces potential cross-platform issues like case sensitivity.","\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["Example: ",(0,s.jsx)(e.code,{children:"user-profile.js"})," instead of ",(0,s.jsx)(e.code,{children:"UserProfile.js"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Lowercase Folder Names"}),": Using lowercase for folder names keeps things simple and standardized across your project."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Managing Function Complexity"}),":"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Limit Lines per Function"}),": By restricting the number of lines a function can have, the plugin promotes writing smaller, more modular code."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Limit Function Parameters"}),": This rule limits the number of function parameters, encouraging developers to pass objects or arrays when working with more complex data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"By following these steps, your project will automatically adhere to coding best practices, ensuring high-quality code throughout development."}),"\n",(0,s.jsx)(e.hr,{})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function a(n){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:a(n.components),s.createElement(r.Provider,{value:e},n.children)}}}]);