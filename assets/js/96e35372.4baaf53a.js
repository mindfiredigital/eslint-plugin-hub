"use strict";(self.webpackChunkeslint_plugin_hub=self.webpackChunkeslint_plugin_hub||[]).push([[6825],{4216:(n,i,t)=>{t.r(i),t.d(i,{assets:()=>r,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var e=t(4848),a=t(8453);const s={slug:"eslint-plugin-hub",title:"ESLint Plugin Hub",authors:["lakin-mohapatra","anand-kumar"],tags:["eslint","plugin","coding-standards","best-practices"]},l=void 0,o={permalink:"/eslint-plugin-hub/blog/eslint-plugin-hub",editUrl:"https://github.com/mindfiredigital/eslint-plugin-hub/edit/main/blog/2024-10-01-welcome/index.md",source:"@site/blog/2024-10-01-welcome/index.md",title:"ESLint Plugin Hub",description:"@mindfiredigital/eslint-plugin-hub is a collection of powerful custom ESLint rules designed to help you enforce consistent coding standards and best practices across your JavaScript, TypeScript, React, Angular, and Vue.js projects.",date:"2024-10-01T00:00:00.000Z",tags:[{inline:!1,label:"ESLint",permalink:"/eslint-plugin-hub/blog/tags/eslint",description:"ESLint tag description"},{inline:!0,label:"plugin",permalink:"/eslint-plugin-hub/blog/tags/plugin"},{inline:!1,label:"Coding Standards",permalink:"/eslint-plugin-hub/blog/tags/coding-standards",description:"Best practices and standards for coding."},{inline:!1,label:"Best Practices",permalink:"/eslint-plugin-hub/blog/tags/best-practices",description:"Coding best practices and guidelines."}],readingTime:1.645,hasTruncateMarker:!0,authors:[{name:"Lakin Mohapatra",title:"Tech Lead @ Mindfire Solutions",page:{permalink:"/eslint-plugin-hub/blog/authors/lakin-mohapatra"},socials:{github:"https://github.com/lakinmindfire"},imageURL:"https://github.com/lakinmindfire.png",key:"lakin-mohapatra"},{name:"Anand Kumar",title:"Software Engineer @ Mindfire Solutions",url:"https://github.com/anandmindfire",page:{permalink:"/eslint-plugin-hub/blog/authors/anand-kumar"},socials:{github:"https://github.com/anandmindfire"},imageURL:"https://github.com/anandmindfire.png",key:"anand-kumar"}],frontMatter:{slug:"eslint-plugin-hub",title:"ESLint Plugin Hub",authors:["lakin-mohapatra","anand-kumar"],tags:["eslint","plugin","coding-standards","best-practices"]},unlisted:!1,prevItem:{title:"What is ESLint?",permalink:"/eslint-plugin-hub/blog/what-is-eslint"},nextItem:{title:"Why Choose ESLint Plugin Hub for Your JavaScript Projects?",permalink:"/eslint-plugin-hub/blog/why-eslint-plugin-hub"}},r={authorsImageUrls:[void 0,void 0]},u=[];function c(n){const i={code:"code",p:"p",...(0,a.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(i.p,{children:[(0,e.jsx)(i.code,{children:"@mindfiredigital/eslint-plugin-hub"})," is a collection of powerful custom ESLint rules designed to help you enforce consistent coding standards and best practices across your JavaScript, TypeScript, React, Angular, and Vue.js projects."]}),"\n",(0,e.jsx)(i.p,{children:"This plugin enforces naming conventions, file structure, and function complexity rules, ensuring that your code remains clean, scalable, and maintainable."})]})}function p(n={}){const{wrapper:i}={...(0,a.R)(),...n.components};return i?(0,e.jsx)(i,{...n,children:(0,e.jsx)(c,{...n})}):c(n)}},8453:(n,i,t)=>{t.d(i,{R:()=>l,x:()=>o});var e=t(6540);const a={},s=e.createContext(a);function l(n){const i=e.useContext(s);return e.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function o(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:l(n.components),e.createElement(s.Provider,{value:i},n.children)}}}]);